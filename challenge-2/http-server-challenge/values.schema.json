{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type": "object",
    "properties": {
        "replicaCount": {
            "type": "integer",
            "minimum": 1
        },
        "image": {
            "type": "object",
            "properties": {
                "repository": {
                    "type": "string"
                },
                "pullPolicy": {
                    "type": "string",
                    "enum": [
                        "Always",
                        "IfNotPresent",
                        "Never"
                    ]
                },
                "tag": {
                    "type": "string"
                }
            },
            "required": [
                "repository",
                "pullPolicy",
                "tag"
            ]
        },
        "imagePullSecrets": {
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "nameOverride": {
            "type": "string"
        },
        "fullnameOverride": {
            "type": "string"
        },
        "containerPort": {
            "type": "integer"
        },
        "serviceAccount": {
            "type": "object",
            "properties": {
                "create": {
                    "type": "boolean"
                },
                "automount": {
                    "type": "boolean"
                },
                "annotations": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "create",
                "automount",
                "annotations",
                "name"
            ]
        },
        "podAnnotations": {
            "type": "object"
        },
        "podLabels": {
            "type": "object"
        },
        "podSecurityContext": {
            "type": "object"
        },
        "securityContext": {
            "type": "object"
        },
        "service": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "ClusterIP",
                        "NodePort",
                        "LoadBalancer"
                    ]
                },
                "port": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 65535
                }
            },
            "required": [
                "type",
                "port"
            ]
        },
        "ingress": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "className": {
                    "type": "string"
                },
                "annotations": {
                    "type": "object"
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "host": {
                                "type": "string"
                            },
                            "paths": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "path": {
                                            "type": "string"
                                        },
                                        "pathType": {
                                            "type": "string",
                                            "enum": [
                                                "ImplementationSpecific",
                                                "Exact",
                                                "Prefix"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "path",
                                        "pathType"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "host",
                            "paths"
                        ]
                    }
                },
                "tls": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "secretName": {
                                "type": "string"
                            },
                            "hosts": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "required": [
                            "secretName",
                            "hosts"
                        ]
                    }
                }
            },
            "required": [
                "enabled",
                "className",
                "annotations",
                "hosts"
            ]
        },
        "resources": {
            "type": "object"
        },
        "livenessProbe": {
            "type": "object",
            "properties": {
                "httpGet": {
                    "type": "object",
                    "properties": {
                        "path": {
                            "type": "string"
                        },
                        "port": {
                            "type": "integer"
                        }
                    },
                    "required": [
                        "path",
                        "port"
                    ]
                }
            },
            "required": [
                "httpGet"
            ]
        },
        "readinessProbe": {
            "type": "object",
            "properties": {
                "httpGet": {
                    "type": "object",
                    "properties": {
                        "path": {
                            "type": "string"
                        },
                        "port": {
                            "type": "integer"
                        }
                    },
                    "required": [
                        "path",
                        "port"
                    ]
                }
            },
            "required": [
                "httpGet"
            ]
        },
        "autoscaling": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "minReplicas": {
                    "type": "integer"
                },
                "maxReplicas": {
                    "type": "integer"
                },
                "targetCPUUtilizationPercentage": {
                    "type": "integer"
                }
            },
            "required": [
                "enabled",
                "minReplicas",
                "maxReplicas",
                "targetCPUUtilizationPercentage"
            ]
        },
        "volumes": {
            "type": "array",
            "items": {
                "type": "object"
            }
        },
        "volumeMounts": {
            "type": "array",
            "items": {
                "type": "object"
            }
        },
        "nodeSelector": {
            "type": "object"
        },
        "tolerations": {
            "type": "array",
            "items": {
                "type": "object"
            }
        },
        "affinity": {
            "type": "object"
        }
    },
    "required": [
        "replicaCount",
        "image",
        "imagePullSecrets",
        "nameOverride",
        "fullnameOverride",
        "containerPort",
        "serviceAccount",
        "podAnnotations",
        "podLabels",
        "podSecurityContext",
        "securityContext",
        "service",
        "ingress",
        "resources",
        "livenessProbe",
        "readinessProbe",
        "autoscaling",
        "volumes",
        "volumeMounts",
        "nodeSelector",
        "tolerations",
        "affinity"
    ]
}